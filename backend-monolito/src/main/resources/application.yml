spring:
  flyway:
    baseline-on-migrate: true
    validate-on-migrate: false
    repair-on-migrate: true
  http:
    client:
      factory: jdk
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: ${PORT:${SERVER_PORT:8080}}
  shutdown: graceful
  compression:
    enabled: true
    mime-types: application/json, text/html, text/plain
  forward-headers-strategy: framework
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    org.hibernate: warn
    org.hibernate.orm.connections.pooling: warn
    com.zaxxer.hikari: warn
    com.luizgasparetto.backend.monolito: info
    org.springframework.boot.context.config: debug
    com.luizgasparetto.backend.monolito.services.PixWatcher: debug
    com.luizgasparetto.backend.monolito.services.CardWatcher: debug
    com.luizgasparetto.backend.monolito.services.PaymentProcessor: debug

email:
  author: ${EMAIL_AUTHOR}

mail:
  logo:
    url: ${MAIL_LOGO_URL:https://andescore-landingpage.vercel.app/AndesCore.jpg}

efi:
  pix:
    client-id: ${EFI_CLIENT_ID}
    client-secret: ${EFI_CLIENT_SECRET}
    chave: ${EFI_PIX_KEY}
    cert-path: classpath:producao-ec-agenor.p12
    cert-password: ""          # se tiver senha, preencha; ver nota abaixo
    sandbox: false
  card:
    client-id: ${EFI_CARD_CLIENT_ID}
    client-secret: ${EFI_CARD_CLIENT_SECRET}
    sandbox: false
  payout:
    favored-key: ${EFI_PAYOUT_FAVORED_KEY:}
    fee-percent: ${EFI_PAYOUT_FEE_PERCENT:1.59}
    fee-fixed: ${EFI_PAYOUT_FEE_FIXED:0.49}
    margin-percent: ${EFI_PAYOUT_MARGIN_PERCENT:0.8}
    margin-fixed: ${EFI_PAYOUT_MARGIN_FIXED:0}
    min-send: ${EFI_PAYOUT_MIN_SEND:1.20}
    fees:
      includeGatewayFees: true
    delay:
      cardDays: ${EFI_PAYOUT_DELAY_CARD_DAYS:32}
      pixMinutes: ${EFI_PAYOUT_DELAY_PIX_MINUTES:0}
    behavior:
      onePayoutPerAuthorPerOrder: true

# üîÅ ESPELHO para consumidores que leem 'payout.*'
payout:
  fee-percent: ${EFI_PAYOUT_FEE_PERCENT:0}
  fee-fixed: ${EFI_PAYOUT_FEE_FIXED:0}
  margin-percent: ${EFI_PAYOUT_MARGIN_PERCENT:0.8}
  margin-fixed: ${EFI_PAYOUT_MARGIN_FIXED:0}
  min-send: ${EFI_PAYOUT_MIN_SEND:1.00}
  fees:
    includeGatewayFees: true
  delay:
    cardDays: ${EFI_PAYOUT_DELAY_CARD_DAYS:31}
    pixMinutes: ${EFI_PAYOUT_DELAY_PIX_MINUTES:0}
  scheduler:
    card:
      cron: ${PAYOUT_SCHED_CARD_CRON:0 17 3 * * *}
      batchSize: ${PAYOUT_SCHED_CARD_BATCH:100}

springdoc:
  api-docs.path: /api-docs
  swagger-ui.path: /swagger
  swagger-ui.display-request-duration: true
  swagger-ui.try-it-out-enabled: true

checkout:
  reserve:
    ttl-seconds: ${CHECKOUT_RESERVE_TTL_SECONDS:300}
    reaper-ms:  ${CHECKOUT_RESERVE_REAPER_MS:60000}

app:
  privacy:
    cookie-sign-secret: ${COOKIE_SIGN_SECRET}
    ip-salt: ${COOKIE_IP_SALT}
  datasource:
    url: ${JDBC_DATABASE_URL:${DATABASE_URL}}
    username: ${JDBC_DATABASE_USERNAME:${DB_USERNAME}}
    password: ${JDBC_DATABASE_PASSWORD:${DB_PASSWORD}}
    driver-class-name: org.postgresql.Driver
    hikari:
    data-source-properties:
      sslmode: require
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: UTC
        hibernate.type.json_format_mapper: jackson
  mvc:
    async:
      request-timeout: -1
  lifecycle:
    timeout-per-shutdown-phase: 15s
  task:
    scheduling:
      pool:
        size: 2
